on:
 push:
   branches:
     - production
   tags:
     - "v*"

jobs:
  build_ionic_and_sync:
    name: Build Ionic App and sync to Android
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./io-collega-tracker-frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v3.6.0
        with:
         distribution: temurin
         java-version: "17"
      - uses: actions/setup-node@v3
        name: Setup NodeJS v16.14.1
        with:
          node-version: 16.14.1
      - name: Install Capacitor/Core
        run: npm install -g @capacitor/core
      - name: Install Capacitor/cli
        run: npm install -g @capacitor/cli
      - name: Install Capacitor/Android & iOS
        run: npm install -g @capacitor/android @capacitor/ios
      - name: Install Ionic cli
        run: npm install -g @ionic/cli
      - name: Install dependencies
        run: npm ci
      - name: Build App
        run: CI=false ionic build
      - name: Sync Ionic with Android
        run: CI=false ionic cap sync android
      - name: Save ./android as artifact
        uses: actions/upload-artifact@v1
        with:
         name: android
         path: ./android


  build_apk:
   name: Generate APK
   needs: build_ionic_and_sync
   runs-on: ubuntu-latest
   steps:
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: android
     - name: Checkout
       uses: actions/checkout@v3
     - name: Setup JDK
       uses: actions/setup-java@v3.6.0
       with:
         distribution: temurin
         java-version: "17"
     - name: Set execution flag for gradlew
       working-directory: android
       run: chmod +x gradlew
     - name: Build APK
       working-directory: android
       run: bash ./gradlew assembleDebug --stacktrace
     - name: Upload APK
       uses: actions/upload-artifact@v1
       with:
         name: apk
         path: android/app/build/outputs/apk/debug/app-debug.apk

  release:
   name: Release APK
   needs: build_apk
   runs-on: ubuntu-latest
   steps:
     - name: Download APK from build
       uses: actions/download-artifact@v1
       with:
         name: apk
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.run_number }}
         release_name: iO Colleague Tracker v${{ github.run_number }}
     - name: Upload Release APK
       id: upload_release_asset
       uses: actions/upload-release-asset@v1.0.1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }}
         asset_path: apk/app-debug.apk
         asset_name: iO_ColleagueTracker_v${{ github.run_number }}.apk
         asset_content_type: application/zip
